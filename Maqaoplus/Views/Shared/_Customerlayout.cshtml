@using System.Security.Claims
@using Maqaoplus.Models.Auth
@{
    bool authenticated = false;
    string Userid = "";
    Customermodelresponce currentUserData = null;
    long userType = -1;
    if (User.Identities.Any(u => u.IsAuthenticated))
    {
        authenticated = true;
        currentUserData = Util.GetCurrentCustomerData(User.Identities);
        if (currentUserData != null)
        {
            userType = currentUserData.Customermodel.CustomerId;

        }
        Userid = User.Identities.First(u => u.IsAuthenticated && u.HasClaim(c => c.Type == ClaimTypes.NameIdentifier))
            .FindFirst(ClaimTypes.NameIdentifier).Value;
    }

}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <title>DUKAWARE MALL - Your One-Stop Shopping Destination</title>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback">
    <link href="~/lib/plugins/fontawesome-free/css/all.min.css" rel="stylesheet" />
    <link href="~/lib/plugins/select2/css/select2.min.css" rel="stylesheet" />
    <link href="~/lib/plugins/select2-bootstrap4-theme/select2-bootstrap4.min.css" rel="stylesheet" />
    <link href="~/lib/bootstrap-toggle/css/bootstrap2-toggle.min.css" rel="stylesheet" />
    <link href="~/lib/plugins/sweetalert2-theme-bootstrap-4/bootstrap-4.min.css" rel="stylesheet" />
    <link href="~/lib/plugins/bs-stepper/css/bs-stepper.min.css" rel="stylesheet" />
    <link href="~/lib/plugins/datatables-bs4/css/datatables.bootstrap4.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/lib/plugins/datatables-bs4/css/dataTables.bootstrap4.min.css">
    <link href="~/lib/plugins/datatables-buttons/css/buttons.bootstrap4.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/lib/plugins/datatables-responsive/css/responsive.bootstrap4.min.css">
    <link href="~/dist/css/adminlte.min.css" rel="stylesheet" />
    <link href="~/css/site.css" rel="stylesheet" />
    <style type="text/css">
        textarea {
            resize: none;
        }
    </style>


    @RenderSection("Css", required: false)
</head>
<body class="hold-transition sidebar-mini sidebar-white layout-navbar-white layout-fixed layout-navbar-fixed layout-footer-fixed">
    <div class="wrapper">
        <nav class="main-header navbar navbar-expand bg-white">
            <ul class="navbar-nav">
                <li class="nav-item">
                    <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars text-dark"></i></a>
                </li>
            </ul>
            <ul class="nav-item order-1 order-md-3 navbar-nav navbar-no-expand ml-auto">
                <li class="nav-link dropdown">
                    <a class="font-weight-bold text-uppercase text-xs text-dark text-muted dropdown-toggle" data-toggle="dropdown" aria-expanded="false"><i class="fas fa-user-circle text-dark text-muted font-weight-bold fa-1x img-circle rounded-circle"></i>&nbsp; @currentUserData.Customermodel.Fullname</a>
                    <div class="dropdown-menu bg-white">
                        <div class="row" hidden>
                            <div class="col-sm-12">
                                <input id="systemLoggedinedUserid" value="@currentUserData.Customermodel.CustomerId">
                                <input id="systemLoggedinedUserNameId" value="@currentUserData.Customermodel.Fullname">
                            </div>
                        </div>
                        <a asp-area="" asp-controller="Customer" asp-action="Logout" class="dropdown-item text-dark text-sm font-weight-bold"> Log out</a>
                    </div>
                </li>
            </ul>
        </nav>
        @if (authenticated && currentUserData != null)
        {
            @await Component.InvokeAsync("Profile", new { token = currentUserData.Token, code = currentUserData.Customermodel.CustomerId })
        }
        <div class="content-wrapper">
            <div class="content">
                <div class="container-fluid pb-1 mt-1 pt-1">
                    @RenderBody()
                </div>
            </div>
        </div>
        <footer class="main-footer text-center bg-light">
            <p class="text-xs font-weight-normal">&copy; 2020 - @DateTime.Now.Year <a class="text-info" href="https://uttambsolutions.com/" target="_blank">Uttamb Solutions</a>. All rights reserved.</p>
        </footer>
        <div class="modal modal- fade" id="FuelcardsystemModalExtraLarge" tabindex="-1">
            <div class="modal-dialog modal-xl" role="document">
                <div class="modal-content">
                </div>
            </div>
        </div>
        <div class="modal modal- fade" id="FuelcardsystemModalLarge" tabindex="-1">
            <div class="modal-dialog modal-lg" role="document">
                <div class="modal-content">
                </div>
            </div>
        </div>
        <div class="modal fade" id="FuelcardsystemModal" tabindex="-1">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                </div>
            </div>
        </div>
        <div class="blockoverlay">
        </div>
    </div>
    <script src="~/lib/plugins/jquery/jquery.min.js"></script>
    <script src="~/lib/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="~/lib/plugins/select2/js/select2.full.min.js"></script>
    <script src="~/lib/plugins/datatables/jquery.dataTables.min.js"></script>
    <script src="~/lib/plugins/datatables-bs4/js/dataTables.bootstrap4.min.js"></script>
    <script src="~/lib/plugins/datatables-buttons/js/datatables.buttons.min.js"></script>
    <script src="~/lib/plugins/datatables-responsive/js/dataTables.responsive.min.js"></script>
    <script src="~/lib/plugins/datatables-responsive/js/responsive.bootstrap4.min.js"></script>
    <script src="~/lib/bootstrap-toggle/js/bootstrap2-toggle.min.js"></script>
    <script src="~/lib/plugins/sweetalert2/sweetalert2.min.js"></script>
    <script src="~/js/systemcustomerjavascript.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            $('.dropdown-menu a.dropdown-toggle').on('click', function (e) {
                if (!$(this).next().hasClass('show')) {
                    $(this).parents('.dropdown-menu').first().find('.show').removeClass('show');
                }
                var $subMenu = $(this).next('.dropdown-menu');
                $subMenu.toggleClass('show');


                $(this).parents('li.nav-item.dropdown.show').on('hidden.bs.dropdown', function (e) {
                    $('.dropdown-submenu .show').removeClass('show');
                });
                return false;
            });
        });
        $('body').on('shown.bs.modal', '#FuelcardsystemModalLarge', function () {
            $(this).find('.select2').each(function () {
                var dropdownParent = $(document.body);
                if ($(this).parents('.modal.in:first').length !== 0)
                    dropdownParent = $(this).parents('.modal.in:first');
                $(this).select2({
                    dropdownParent: dropdownParent,
                    closeOnSelect: false,
                    placeholder: 'Select options',
                    selectAllText: 'Select All',
                    searchPlaceholder: 'Search options',
                    allowClear: true
                });
            });
        });


        $('body').on('shown.bs.modal', '#childModal', function () {
            $(this).find('.select2-multiple').each(function () {
                var dropdownParent = $(document.body);
                if ($(this).parents('.modal.in:first').length !== 0)
                    dropdownParent = $(this).parents('.modal.in:first');
                $(this).select2({
                    dropdownParent: dropdownParent,
                    closeOnSelect: false,
                    placeholder: 'Select options',
                    selectAllText: 'Select All',
                    searchPlaceholder: 'Search options',
                    allowClear: true
                });
            });
        });

        $('body').on('shown.bs.modal', '#FuelcardsystemModalExtraLarge', function () {
            $(this).find('.select2-multiple').each(function () {
                var dropdownParent = $(document.body);
                if ($(this).parents('.modal.in:first').length !== 0)
                    dropdownParent = $(this).parents('.modal.in:first');
                $(this).select2({
                    dropdownParent: dropdownParent,
                    closeOnSelect: false,
                    placeholder: 'Select options',
                    selectAllText: 'Select All',
                    searchPlaceholder: 'Search options',
                    allowClear: true
                });
            });
        });


        $('body').on('shown.bs.modal', '#childModal', function () {
            $(this).find('.select2-multiple').each(function () {
                var dropdownParent = $(document.body);
                if ($(this).parents('.modal.in:first').length !== 0)
                    dropdownParent = $(this).parents('.modal.in:first');
                $(this).select2({
                    dropdownParent: dropdownParent,
                    closeOnSelect: false,
                    placeholder: 'Select options',
                    selectAllText: 'Select All',
                    searchPlaceholder: 'Search options',
                    allowClear: true
                });
            });
        });


       
        $('#FuelcardsystemModalExtraLarge').on('show.bs.modal', function (event) {
            $(".blockoverlay").show();
            var button = $(event.relatedTarget);
            var url = button.attr("href");
            var modal = $(this);
            modal.find('.modal-content').load(url, function () {
                // After the content is loaded, find the dropdowns and apply Select2
                modal.find('.modal-content select.select2').each(function () {
                    $(this).select2({
                        placeholder: "--Select--",
                        allowClear: true,
                        dropdownAutoWidth: true,
                        minimumResultsForSearch: 1 // Show search box when there is 1 or more items
                        // Add any other options you need
                    }); // Initialize Select2
                });
                $("#AllsystemDataTables").DataTable();
                $("#AllsystemDataTables1").DataTable();
                $("#AllsystemDataTables2").DataTable();
                $("#AllsystemDataTables3").DataTable();
                $("#AllsystemDataTables4").DataTable();
                $(".blockoverlay").hide();
            });
        });
        $('#FuelcardsystemModalExtraLarge').on('hidden.bs.modal', function () {
            $(this).removeData('bs.modal');
            $('.modal-backdrop').remove();
            $('#FuelcardsystemModalExtraLarge .modal-content').empty();
        });

        $('#FuelcardsystemModalLarge').on('show.bs.modal', function (event) {
            $(".blockoverlay").show();
            var button = $(event.relatedTarget);
            var url = button.attr("href");
            var modal = $(this);
            modal.find('.modal-content').load(url, function () {
                // After the content is loaded, find the dropdowns and apply Select2
                modal.find('.modal-content select.select2').each(function () {
                    $(this).select2({
                        placeholder: "--Select--",
                        allowClear: true,
                        dropdownAutoWidth: true,
                        minimumResultsForSearch: 1 // Show search box when there is 1 or more items
                        // Add any other options you need
                    }); // Initialize Select2
                });
                $("#AllsystemDataTables").DataTable();
                $("#AllsystemDataTables1").DataTable();
                $("#AllsystemDataTables2").DataTable();
                $("#AllsystemDataTables3").DataTable();
                $("#AllsystemDataTables4").DataTable();
                $(".blockoverlay").hide();
            });
        });
        $('#FuelcardsystemModalLarge').on('hidden.bs.modal', function () {
            $(this).removeData('bs.modal');
            $('.modal-backdrop').remove();
            $('#FuelcardsystemModalLarge .modal-content').empty();
        });

        $('#FuelcardsystemModal').on('show.bs.modal', function (event) {
            $(".blockoverlay").show();
            var button = $(event.relatedTarget);
            var url = button.attr("href");
            var modal = $(this);
            modal.find('.modal-content').load(url, function () {
                // After the content is loaded, find the dropdowns and apply Select2
                modal.find('.modal-content select.select2').each(function () {
                    $(this).select2({
                        placeholder: "--Select--",
                        allowClear: true,
                        dropdownAutoWidth: true,
                        minimumResultsForSearch: 1 // Show search box when there is 1 or more items
                        // Add any other options you need
                    }); // Initialize Select2
                });
                $("#AllsystemDataTables").DataTable();
                $("#AllsystemDataTables1").DataTable();
                $("#AllsystemDataTables2").DataTable();
                $("#AllsystemDataTables3").DataTable();
                $("#AllsystemDataTables4").DataTable();
                $(".blockoverlay").hide();
            });
        });
        $('#FuelcardsystemModal').on('hidden.bs.modal', function () {
            $(this).removeData('bs.modal');
            $('.modal-backdrop').remove();
            $('#FuelcardsystemModal .modal-content').empty();
        });

        function deactivatethis(event) {
            Swal.fire({
                title: "Are you sure you want to deactivate this?",
                text: "Once deactivated, it will transact!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, deactivate it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    var deactivateBtn = event.target;
                    var tableName = deactivateBtn.getAttribute('data-tablename');
                    var columnName = deactivateBtn.getAttribute('data-Columname');
                    var status = deactivateBtn.getAttribute('data-Status');
                    var columnIdName = deactivateBtn.getAttribute('data-Columnidname');
                    var entryId = deactivateBtn.getAttribute('data-Entryid');
                    var uil =
                    {
                        Tablename: tableName, Columname: columnName, Status: status, Columnidname: columnIdName, Entryid: entryId,
                        CreatedbyId: $('#systemLoggedinedUserId').val(), Createdby: $('#systemLoggedinedUserNameId').val(), ModifiedId: $('#systemLoggedinedUserId').val(), Modifiedby: $('#systemLoggedinedUserNameId').val(),
                        Datecreated: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '), Datemodified: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
                    };
                    $.post("/CustomerManagement/AllDeleteDeativateActions", uil, function (response) {
                        if (response.RespStatus == 0) {
                            Swal.fire('Item Deactivated!', 'Good.', 'success')
                            setTimeout(function () { location.reload(); }, 1000);
                        } else if (response.RespStatus == 1) {
                            Swal.fire("Oops!", response.RespMessage, "warning");
                        }
                        else {
                            Swal.fire("Oops! Something Went Wrong", "Database Error has occured. Kindly Contact our support team.", "error");
                        }
                    });
                } else {
                    Swal.fire("Thank you!", "Deactivate once you are sure", "info");
                }
            });
        };

        function activatethis(event) {
            Swal.fire({
                title: "Are you sure you want to activate this?",
                text: "Once activated, it will transact!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, activate it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    var activateBtn = event.target;
                    var Tablename = activateBtn.getAttribute('data-Tablename');
                    var Columname = activateBtn.getAttribute('data-Columname');
                    var Status = activateBtn.getAttribute('data-Status');
                    var Columnidname = activateBtn.getAttribute('data-Columnidname');
                    var Entryid = activateBtn.getAttribute('data-Entryid');
                    var uil =
                    {
                        Tablename: Tablename, Columname: Columname, Status: Status, Columnidname: Columnidname, Entryid: Entryid,
                        CreatedbyId: $('#systemLoggedinedUserId').val(), Createdby: $('#systemLoggedinedUserNameId').val(), ModifiedId: $('#systemLoggedinedUserId').val(), Modifiedby: $('#systemLoggedinedUserNameId').val(),
                        Datecreated: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '), Datemodified: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
                    };
                    $.post("/CustomerManagement/AllDeleteDeativateActions", uil, function (response) {
                        if (response.RespStatus == 0) {
                            Swal.fire('Item Activated!', 'Good.', 'success')
                            setTimeout(function () { location.reload(); }, 1000);
                        } else if (response.RespStatus == 1) {
                            Swal.fire("Oops!", response.RespMessage, "warning");
                        }
                        else {
                            Swal.fire("Oops! Something Went Wrong", "Database Error has occured. Kindly Contact our support team.", "error");
                        }
                    });
                } else {
                    Swal.fire("Thank you!", "Activate once you are sure", "info");
                }
            });
        };

        function restorethis(event) {
            Swal.fire({
                title: "Are you sure you want to restore this?",
                text: "Once retored, it will transact!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, restore it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    var restoreBtn = event.target;
                    var Tablename = restoreBtn.getAttribute('data-Tablename');
                    var Columname = restoreBtn.getAttribute('data-Columname');
                    var Status = restoreBtn.getAttribute('data-Status');
                    var Columnidname = restoreBtn.getAttribute('data-Columnidname');
                    var Entryid = restoreBtn.getAttribute('data-Entryid');
                    var uil =
                    {
                        Tablename: Tablename, Columname: Columname, Status: Status, Columnidname: Columnidname, Entryid: Entryid,
                        CreatedbyId: $('#systemLoggedinedUserId').val(), Createdby: $('#systemLoggedinedUserNameId').val(), ModifiedId: $('#systemLoggedinedUserId').val(), Modifiedby: $('#systemLoggedinedUserNameId').val(),
                        Datecreated: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '), Datemodified: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
                    };

                    $.post("/CustomerManagement/AllDeleteDeativateActions", uil, function (response) {
                        if (response.RespStatus == 0) {
                            Swal.fire('Item Restored!', 'Good.', 'success')
                            setTimeout(function () { location.reload(); }, 1000);
                        } else if (response.RespStatus == 1) {
                            Swal.fire("Oops!", response.RespMessage, "warning");
                        }
                        else {
                            Swal.fire("Oops! Something Went Wrong", "Database Error has occured. Kindly Contact our support team.", "error");
                        }
                    });
                } else {
                    Swal.fire("Thank you!", "Restore once you are sure", "info");
                }
            });
        };

        function deletethis(event) {
            Swal.fire({
                title: "Are you sure you want to delete this?",
                text: "Once deleted, it will not transact!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    var deleteBtn = event.target;
                    var Tablename = deleteBtn.getAttribute('data-Tablename');
                    var Columname = deleteBtn.getAttribute('data-Columname');
                    var Status = deleteBtn.getAttribute('data-Status');
                    var Columnidname = deleteBtn.getAttribute('data-Columnidname');
                    var Entryid = deleteBtn.getAttribute('data-Entryid');
                    var uil =
                    {
                        Tablename: Tablename, Columname: Columname, Status: Status, Columnidname: Columnidname, Entryid: Entryid,
                        CreatedbyId: $('#systemLoggedinedUserId').val(), Createdby: $('#systemLoggedinedUserNameId').val(), ModifiedId: $('#systemLoggedinedUserId').val(), Modifiedby: $('#systemLoggedinedUserNameId').val(),
                        Datecreated: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '), Datemodified: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
                    };
                    $.post("/CustomerManagement/AllDeleteDeativateActions", uil, function (response) {
                        if (response.RespStatus == 0) {
                            Swal.fire('Item Deleted!', 'Good.', 'success')
                            setTimeout(function () { location.reload(); }, 1000);
                        } else if (response.RespStatus == 1) {
                            Swal.fire("Oops!", response.RespMessage, "warning");
                        }
                        else {
                            Swal.fire("Oops! Something Went Wrong", "Database Error has occured. Kindly Contact our support team.", "error");
                        }

                    });
                } else {
                    Swal.fire("Thank you!", "Delete once you are sure", "info");
                }
            });
        };

        function rejectthis(event) {
            Swal.fire({
                title: "Are you sure you want to reject this?",
                text: "Once rejected, it will not transact!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, Reject it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    var rejectBtn = event.target;
                    var tableName = rejectBtn.getAttribute('data-tablename');
                    var columnName = rejectBtn.getAttribute('data-Columname');
                    var status = rejectBtn.getAttribute('data-Status');
                    var columnIdName = rejectBtn.getAttribute('data-Columnidname');
                    var entryId = rejectBtn.getAttribute('data-Entryid');
                    var uil =
                    {
                        Tablename: tableName, Columname: columnName, Status: status, Columnidname: columnIdName, Entryid: entryId,
                        CreatedbyId: $('#systemLoggedinedUserId').val(), Createdby: $('#systemLoggedinedUserNameId').val(), ModifiedId: $('#systemLoggedinedUserId').val(), Modifiedby: $('#systemLoggedinedUserNameId').val(),
                        Datecreated: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '), Datemodified: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
                    };
                    $.post("/CustomerManagement/AllDeleteDeativateActions", uil, function (response) {
                        if (response.RespStatus == 0) {
                            Swal.fire('Item Rejected!', 'Good.', 'success')
                            setTimeout(function () { location.reload(); }, 1000);
                        } else if (response.RespStatus == 1) {
                            Swal.fire("Oops!", response.RespMessage, "warning");
                        }
                        else {
                            Swal.fire("Oops! Something Went Wrong", "Database Error has occured. Kindly Contact our support team.", "error");
                        }
                    });
                } else {
                    Swal.fire("Thank you!", "Reject once you are sure", "info");
                }
            });
        };

        function approvethis(event) {
            Swal.fire({
                title: "Are you sure you want to Approve this?",
                text: "Approving this, it will transact!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, Approve it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    var approveBtn = event.target;
                    var Tablename = approveBtn.getAttribute('data-Tablename');
                    var Columname = approveBtn.getAttribute('data-Columname');
                    var Status = approveBtn.getAttribute('data-Status');
                    var Columnidname = approveBtn.getAttribute('data-Columnidname');
                    var Entryid = approveBtn.getAttribute('data-Entryid');
                    var uil =
                    {
                        Tablename: Tablename, Columname: Columname, Status: Status, Columnidname: Columnidname, Entryid: Entryid,
                        CreatedbyId: $('#systemLoggedinedUserId').val(), Createdby: $('#systemLoggedinedUserNameId').val(), ModifiedId: $('#systemLoggedinedUserId').val(), Modifiedby: $('#systemLoggedinedUserNameId').val(),
                        Datecreated: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '), Datemodified: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
                    };
                    $.post("/CustomerManagement/AllDeleteDeativateActions", uil, function (response) {
                        if (response.RespStatus == 0) {
                            Swal.fire('Item Approved!', 'Good.', 'success')
                            setTimeout(function () { location.reload(); }, 1000);
                        } else if (response.RespStatus == 1) {
                            Swal.fire("Oops!", response.RespMessage, "warning");
                        }
                        else {
                            Swal.fire("Oops! Something Went Wrong", "Database Error has occured. Kindly Contact our support team.", "error");
                        }

                    });
                } else {
                    Swal.fire("Thank you!", "Approve once you are sure", "info");
                }
            });
        };

        function permanentdeletethis(event) {
            Swal.fire({
                title: "Are you sure you want to Remove this?",
                text: "Once Removed, Cannot be Recovered!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, Remove it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    var removeBtn = event.target;
                    var Tablename = removeBtn.getAttribute('data-Tablename');
                    var Columnidname = removeBtn.getAttribute('data-Columnidname');
                    var Entryid = removeBtn.getAttribute('data-Entryid');
                    var uil =
                    {
                        Tablename: Tablename, Columnidname: Columnidname, Entryid: Entryid,
                        CreatedbyId: $('#systemLoggedinedUserId').val(), Createdby: $('#systemLoggedinedUserNameId').val(), ModifiedId: $('#systemLoggedinedUserId').val(), Modifiedby: $('#systemLoggedinedUserNameId').val(),
                        Datecreated: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '), Datemodified: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
                    };
                    $.post("/CustomerManagement/AllRemoveDeativateActions", uil, function (response) {
                        if (response.RespStatus == 0) {
                            Swal.fire('Item Removed!', 'Good.', 'success')
                            setTimeout(function () { location.reload(); }, 1000);
                        } else if (response.RespStatus == 1) {
                            Swal.fire("Oops!", response.RespMessage, "warning");
                        }
                        else {
                            Swal.fire("Oops! Something Went Wrong", "Database Error has occured. Kindly Contact our support team.", "error");
                        }

                    });
                } else {
                    Swal.fire("Thank you!", "Remove once you are sure", "info");
                }
            });
        };

        function singledefaultthis(event) {
            Swal.fire({
                title: "Are you sure you want to default this?",
                text: "Once defaulted, it will be the primary item!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, default it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    var activateBtn = event.target;
                    var Tablename = activateBtn.getAttribute('data-Tablename');
                    var Columname = activateBtn.getAttribute('data-Columname');
                    var Status = activateBtn.getAttribute('data-Status');
                    var Columnidname = activateBtn.getAttribute('data-Columnidname');
                    var Entryid = activateBtn.getAttribute('data-Entryid');
                    var uil =
                    {
                        Tablename: Tablename, Columname: Columname, Status: Status, Columnidname: Columnidname, Entryid: Entryid,
                        CreatedbyId: $('#systemLoggedinedUserId').val(), Createdby: $('#systemLoggedinedUserNameId').val(), ModifiedId: $('#systemLoggedinedUserId').val(), Modifiedby: $('#systemLoggedinedUserNameId').val(),
                        Datecreated: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '), Datemodified: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
                    };
                    $.post("/CustomerManagement/AllSingleDefaultActions", uil, function (response) {
                        if (response.RespStatus == 0) {
                            Swal.fire('Item Defaulted!', 'Good.', 'success')
                            setTimeout(function () { location.reload(); }, 1000);
                        } else if (response.RespStatus == 1) {
                            Swal.fire("Oops!", response.RespMessage, "warning");
                        }
                        else {
                            Swal.fire("Oops! Something Went Wrong", "Database Error has occured. Kindly Contact our support team.", "error");
                        }
                    });
                } else {
                    Swal.fire("Thank you!", "Default once you are sure", "info");
                }
            });
        };

        function tenantdeactivatethis(event) {
            Swal.fire({
                title: "Are you sure you want to deactivate this?",
                text: "Once deactivated, it will transact!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, deactivate it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    var deactivateBtn = event.target;
                    var tableName = deactivateBtn.getAttribute('data-tablename');
                    var columnName = deactivateBtn.getAttribute('data-Columname');
                    var status = deactivateBtn.getAttribute('data-Status');
                    var columnIdName = deactivateBtn.getAttribute('data-Columnidname');
                    var entryId = deactivateBtn.getAttribute('data-Entryid');
                    var uil =
                    {
                        Tablename: tableName, Columname: columnName, Status: status, Columnidname: columnIdName, Entryid: entryId,
                        CreatedbyId: $('#systemLoggedinedUserId').val(), Createdby: $('#systemLoggedinedUserNameId').val(), ModifiedId: $('#systemLoggedinedUserId').val(), Modifiedby: $('#systemLoggedinedUserNameId').val(),
                        Datecreated: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '), Datemodified: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
                    };
                    $.post("/StaffManagement/AllDeleteDeativateActions", uil, function (response) {
                        if (response.RespStatus == 0) {
                            Swal.fire('Item Deactivated!', 'Good.', 'success')
                            setTimeout(function () { location.reload(); }, 1000);
                        } else if (response.RespStatus == 1) {
                            Swal.fire("Oops!", response.RespMessage, "warning");
                        }
                        else {
                            Swal.fire("Oops! Something Went Wrong", "Database Error has occured. Kindly Contact our support team.", "error");
                        }
                    });
                } else {
                    Swal.fire("Thank you!", "Deactivate once you are sure", "info");
                }
            });
        };

        function tenantactivatethis(event) {
            Swal.fire({
                title: "Are you sure you want to activate this?",
                text: "Once activated, it will transact!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, activate it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    var activateBtn = event.target;
                    var Tablename = activateBtn.getAttribute('data-Tablename');
                    var Columname = activateBtn.getAttribute('data-Columname');
                    var Status = activateBtn.getAttribute('data-Status');
                    var Columnidname = activateBtn.getAttribute('data-Columnidname');
                    var Entryid = activateBtn.getAttribute('data-Entryid');
                    var uil =
                    {
                        Tablename: Tablename, Columname: Columname, Status: Status, Columnidname: Columnidname, Entryid: Entryid,
                        CreatedbyId: $('#systemLoggedinedUserId').val(), Createdby: $('#systemLoggedinedUserNameId').val(), ModifiedId: $('#systemLoggedinedUserId').val(), Modifiedby: $('#systemLoggedinedUserNameId').val(),
                        Datecreated: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '), Datemodified: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
                    };
                    $.post("/StaffManagement/AllDeleteDeativateActions", uil, function (response) {
                        if (response.RespStatus == 0) {
                            Swal.fire('Item Activated!', 'Good.', 'success')
                            setTimeout(function () { location.reload(); }, 1000);
                        } else if (response.RespStatus == 1) {
                            Swal.fire("Oops!", response.RespMessage, "warning");
                        }
                        else {
                            Swal.fire("Oops! Something Went Wrong", "Database Error has occured. Kindly Contact our support team.", "error");
                        }
                    });
                } else {
                    Swal.fire("Thank you!", "Activate once you are sure", "info");
                }
            });
        };

        function tenantrestorethis(event) {
            Swal.fire({
                title: "Are you sure you want to restore this?",
                text: "Once retored, it will transact!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, restore it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    var restoreBtn = event.target;
                    var Tablename = restoreBtn.getAttribute('data-Tablename');
                    var Columname = restoreBtn.getAttribute('data-Columname');
                    var Status = restoreBtn.getAttribute('data-Status');
                    var Columnidname = restoreBtn.getAttribute('data-Columnidname');
                    var Entryid = restoreBtn.getAttribute('data-Entryid');
                    var uil =
                    {
                        Tablename: Tablename, Columname: Columname, Status: Status, Columnidname: Columnidname, Entryid: Entryid,
                        CreatedbyId: $('#systemLoggedinedUserId').val(), Createdby: $('#systemLoggedinedUserNameId').val(), ModifiedId: $('#systemLoggedinedUserId').val(), Modifiedby: $('#systemLoggedinedUserNameId').val(),
                        Datecreated: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '), Datemodified: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
                    };

                    $.post("/StaffManagement/AllDeleteDeativateActions", uil, function (response) {
                        if (response.RespStatus == 0) {
                            Swal.fire('Item Restored!', 'Good.', 'success')
                            setTimeout(function () { location.reload(); }, 1000);
                        } else if (response.RespStatus == 1) {
                            Swal.fire("Oops!", response.RespMessage, "warning");
                        }
                        else {
                            Swal.fire("Oops! Something Went Wrong", "Database Error has occured. Kindly Contact our support team.", "error");
                        }
                    });
                } else {
                    Swal.fire("Thank you!", "Restore once you are sure", "info");
                }
            });
        };

        function tenantdeletethis(event) {
            Swal.fire({
                title: "Are you sure you want to delete this?",
                text: "Once deleted, it will not transact!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    var deleteBtn = event.target;
                    var Tablename = deleteBtn.getAttribute('data-Tablename');
                    var Columname = deleteBtn.getAttribute('data-Columname');
                    var Status = deleteBtn.getAttribute('data-Status');
                    var Columnidname = deleteBtn.getAttribute('data-Columnidname');
                    var Entryid = deleteBtn.getAttribute('data-Entryid');
                    var uil =
                    {
                        Tablename: Tablename, Columname: Columname, Status: Status, Columnidname: Columnidname, Entryid: Entryid,
                        CreatedbyId: $('#systemLoggedinedUserId').val(), Createdby: $('#systemLoggedinedUserNameId').val(), ModifiedId: $('#systemLoggedinedUserId').val(), Modifiedby: $('#systemLoggedinedUserNameId').val(),
                        Datecreated: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '), Datemodified: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
                    };
                    $.post("/StaffManagement/AllDeleteDeativateActions", uil, function (response) {
                        if (response.RespStatus == 0) {
                            Swal.fire('Item Deleted!', 'Good.', 'success')
                            setTimeout(function () { location.reload(); }, 1000);
                        } else if (response.RespStatus == 1) {
                            Swal.fire("Oops!", response.RespMessage, "warning");
                        }
                        else {
                            Swal.fire("Oops! Something Went Wrong", "Database Error has occured. Kindly Contact our support team.", "error");
                        }

                    });
                } else {
                    Swal.fire("Thank you!", "Delete once you are sure", "info");
                }
            });
        };

        function tenantrejectthis(event) {
            Swal.fire({
                title: "Are you sure you want to reject this?",
                text: "Once rejected, it will not transact!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, Reject it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    var rejectBtn = event.target;
                    var tableName = rejectBtn.getAttribute('data-tablename');
                    var columnName = rejectBtn.getAttribute('data-Columname');
                    var status = rejectBtn.getAttribute('data-Status');
                    var columnIdName = rejectBtn.getAttribute('data-Columnidname');
                    var entryId = rejectBtn.getAttribute('data-Entryid');
                    var uil =
                    {
                        Tablename: tableName, Columname: columnName, Status: status, Columnidname: columnIdName, Entryid: entryId,
                        CreatedbyId: $('#systemLoggedinedUserId').val(), Createdby: $('#systemLoggedinedUserNameId').val(), ModifiedId: $('#systemLoggedinedUserId').val(), Modifiedby: $('#systemLoggedinedUserNameId').val(),
                        Datecreated: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '), Datemodified: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
                    };
                    $.post("/StaffManagement/AllDeleteDeativateActions", uil, function (response) {
                        if (response.RespStatus == 0) {
                            Swal.fire('Item Rejected!', 'Good.', 'success')
                            setTimeout(function () { location.reload(); }, 1000);
                        } else if (response.RespStatus == 1) {
                            Swal.fire("Oops!", response.RespMessage, "warning");
                        }
                        else {
                            Swal.fire("Oops! Something Went Wrong", "Database Error has occured. Kindly Contact our support team.", "error");
                        }
                    });
                } else {
                    Swal.fire("Thank you!", "Reject once you are sure", "info");
                }
            });
        };

        function tenantapprovethis(event) {
            Swal.fire({
                title: "Are you sure you want to Approve this?",
                text: "Approving this, it will transact!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, Approve it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    var approveBtn = event.target;
                    var Tablename = approveBtn.getAttribute('data-Tablename');
                    var Columname = approveBtn.getAttribute('data-Columname');
                    var Status = approveBtn.getAttribute('data-Status');
                    var Columnidname = approveBtn.getAttribute('data-Columnidname');
                    var Entryid = approveBtn.getAttribute('data-Entryid');
                    var uil =
                    {
                        Tablename: Tablename, Columname: Columname, Status: Status, Columnidname: Columnidname, Entryid: Entryid,
                        CreatedbyId: $('#systemLoggedinedUserId').val(), Createdby: $('#systemLoggedinedUserNameId').val(), ModifiedId: $('#systemLoggedinedUserId').val(), Modifiedby: $('#systemLoggedinedUserNameId').val(),
                        Datecreated: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '), Datemodified: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
                    };
                    $.post("/StaffManagement/AllDeleteDeativateActions", uil, function (response) {
                        if (response.RespStatus == 0) {
                            Swal.fire('Item Approved!', 'Good.', 'success')
                            setTimeout(function () { location.reload(); }, 1000);
                        } else if (response.RespStatus == 1) {
                            Swal.fire("Oops!", response.RespMessage, "warning");
                        }
                        else {
                            Swal.fire("Oops! Something Went Wrong", "Database Error has occured. Kindly Contact our support team.", "error");
                        }

                    });
                } else {
                    Swal.fire("Thank you!", "Approve once you are sure", "info");
                }
            });
        };

        function tenantpermanentdeletethis(event) {
            Swal.fire({
                title: "Are you sure you want to Remove this?",
                text: "Once Removed, Cannot be Recovered!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, Remove it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    var removeBtn = event.target;
                    var Tablename = removeBtn.getAttribute('data-Tablename');
                    var Columnidname = removeBtn.getAttribute('data-Columnidname');
                    var Entryid = removeBtn.getAttribute('data-Entryid');
                    var uil =
                    {
                        Tablename: Tablename, Columnidname: Columnidname, Entryid: Entryid,
                        CreatedbyId: $('#systemLoggedinedUserId').val(), Createdby: $('#systemLoggedinedUserNameId').val(), ModifiedId: $('#systemLoggedinedUserId').val(), Modifiedby: $('#systemLoggedinedUserNameId').val(),
                        Datecreated: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '), Datemodified: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
                    };
                    $.post("/StaffManagement/AllRemoveDeativateActions", uil, function (response) {
                        if (response.RespStatus == 0) {
                            Swal.fire('Item Removed!', 'Good.', 'success')
                            setTimeout(function () { location.reload(); }, 1000);
                        } else if (response.RespStatus == 1) {
                            Swal.fire("Oops!", response.RespMessage, "warning");
                        }
                        else {
                            Swal.fire("Oops! Something Went Wrong", "Database Error has occured. Kindly Contact our support team.", "error");
                        }

                    });
                } else {
                    Swal.fire("Thank you!", "Remove once you are sure", "info");
                }
            });
        };

        function tenantsingledefaultthis(event) {
            Swal.fire({
                title: "Are you sure you want to default this?",
                text: "Once defaulted, it will be the primary item!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, default it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    var activateBtn = event.target;
                    var Tablename = activateBtn.getAttribute('data-Tablename');
                    var Columname = activateBtn.getAttribute('data-Columname');
                    var Status = activateBtn.getAttribute('data-Status');
                    var Columnidname = activateBtn.getAttribute('data-Columnidname');
                    var Entryid = activateBtn.getAttribute('data-Entryid');
                    var uil =
                    {
                        Tablename: Tablename, Columname: Columname, Status: Status, Columnidname: Columnidname, Entryid: Entryid,
                        CreatedbyId: $('#systemLoggedinedUserId').val(), Createdby: $('#systemLoggedinedUserNameId').val(), ModifiedId: $('#systemLoggedinedUserId').val(), Modifiedby: $('#systemLoggedinedUserNameId').val(),
                        Datecreated: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '), Datemodified: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
                    };
                    $.post("/StaffManagement/AllSingleDefaultActions", uil, function (response) {
                        if (response.RespStatus == 0) {
                            Swal.fire('Item Defaulted!', 'Good.', 'success')
                            setTimeout(function () { location.reload(); }, 1000);
                        } else if (response.RespStatus == 1) {
                            Swal.fire("Oops!", response.RespMessage, "warning");
                        }
                        else {
                            Swal.fire("Oops! Something Went Wrong", "Database Error has occured. Kindly Contact our support team.", "error");
                        }
                    });
                } else {
                    Swal.fire("Thank you!", "Default once you are sure", "info");
                }
            });
        };


        // Attach event listener to parent modal's "show.bs.modal" event
        $('#parentModal').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget);
            var url = button.attr("href");
            var modal = $(this);

            // Load the content of the parent modal via AJAX
            $.ajax({
                url: url,
                type: 'GET',
                success: function (result) {
                    modal.find('#parentModalContent').html(result);
                    // Attach event listener to child modal's button to open the child modal
                    modal.find('#childModalButton').on('click', function () {
                        var accountId = $('#customeraccountId').val();
                        var childUrl = '@Url.Action("AddCustomerAccountPolicy", "CustomerManagement")?AccountId=' + accountId;
                        var childModal = $('#childModal');

                        // Load the content of the child modal via AJAX
                        $.ajax({
                            url: childUrl,
                            type: 'GET',
                            success: function (result) {
                                childModal.find('.modal-content').html(result);

                                // Show the child modal on top of the parent modal
                                childModal.modal('show');
                            },
                            error: function () {
                                childModal.find('.modal-content').html('Error loading content.');

                                // Show the child modal on top of the parent modal
                                childModal.modal('show');
                            }
                        });
                    });
                },
                error: function () {
                    modal.find('#parentModalContent').html('Error loading content.');
                }
            });
        });
        function dataObject() {
            var t = $('#form_id').serializeArray();
            var paramObj = {};
            $.each(t, function (_, kv) {
                if (paramObj.hasOwnProperty(kv.name)) {
                    paramObj[kv.name] = $.makeArray(paramObj[kv.name]);
                    paramObj[kv.name].push(kv.value);
                }
                else {
                    paramObj[kv.name] = kv.value;
                }
            });

            return paramObj;
        }
        function initViewer(s, e) {

            s.previewModel.reportPreview.showMultipagePreview(true);
        }

        $("#AllsystemDataTables").DataTable();
        $("#AllsystemDataTables1").DataTable();
        $("#AllsystemDataTables2").DataTable();
        $("#AllsystemDataTables3").DataTable();
        $("#AllsystemDataTables4").DataTable();
    </script>

    @RenderSection("Scripts", required: false)
    <script src="~/dist/js/adminlte.min.js"></script>
</body>
</html>

